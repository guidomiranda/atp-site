
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.5.0
 * Query Engine version: 694eea289a8462c80264df36757e4fdc129b1b32
 */
Prisma.prismaVersion = {
  client: "4.5.0",
  engine: "694eea289a8462c80264df36757e4fdc129b1b32"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.BannerScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  description: 'description',
  image: 'image',
  bg: 'bg',
  status: 'status',
  order: 'order',
  created_at: 'created_at'
});

exports.Prisma.BateriasScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  imagen: 'imagen',
  categoria: 'categoria',
  capacidad: 'capacidad',
  cca10: 'cca10',
  polaridad: 'polaridad',
  largo: 'largo',
  ancho: 'ancho',
  altura: 'altura',
  estado: 'estado',
  orden: 'orden',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.ClientScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  description: 'description',
  status: 'status',
  order: 'order',
  created_at: 'created_at'
});

exports.Prisma.ClientesScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  link: 'link',
  imagen: 'imagen',
  estado: 'estado',
  orden: 'orden',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.EmpresaScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  link: 'link',
  imagen: 'imagen',
  estado: 'estado',
  orden: 'orden',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.FilterScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  image: 'image',
  line: 'line',
  type: 'type',
  dia_ext: 'dia_ext',
  height: 'height',
  dia_int: 'dia_int',
  thread: 'thread',
  val_anti_ret: 'val_anti_ret',
  val_ali: 'val_ali',
  model: 'model',
  status: 'status',
  order: 'order',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.FiltrosScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  linea: 'linea',
  imagen: 'imagen',
  altura: 'altura',
  dia_ext: 'dia_ext',
  dia_int: 'dia_int',
  estado: 'estado',
  orden: 'orden',
  rosca: 'rosca',
  tipo: 'tipo',
  val_anti_ret: 'val_anti_ret',
  val_ali: 'val_ali',
  modelo: 'modelo',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.LubAuxScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  image: 'image',
  presentacion: 'presentacion',
  status: 'status',
  order: 'order',
  indicado_para: 'indicado_para',
  rec_honda: 'rec_honda',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.LubMotoScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  presentacion: 'presentacion',
  indicado_para: 'indicado_para',
  status: 'status',
  order: 'order',
  image: 'image',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.LubVehLivianoScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  image: 'image',
  presentacion: 'presentacion',
  status: 'status',
  order: 'order',
  indicado_para: 'indicado_para',
  especificacion: 'especificacion',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.LubVehPesadoScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  caracteristicas: 'caracteristicas',
  image: 'image',
  presentacion: 'presentacion',
  atiende_excede: 'atiende_excede',
  aprobado: 'aprobado',
  status: 'status',
  order: 'order',
  rec_exxon_mob: 'rec_exxon_mob',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.LubricantesScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  imagen: 'imagen',
  linea: 'linea',
  presentacion: 'presentacion',
  indicado_para: 'indicado_para',
  especificacion: 'especificacion',
  rec_honda: 'rec_honda',
  rec_exxon_mob: 'rec_exxon_mob',
  caracteristicas: 'caracteristicas',
  atiende_excede: 'atiende_excede',
  aprobado: 'aprobado',
  estado: 'estado',
  orden: 'orden',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.MarcasScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  link: 'link',
  imagen: 'imagen',
  estado: 'estado',
  orden: 'orden',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.ProductScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  image: 'image',
  category: 'category',
  capacity: 'capacity',
  cca10: 'cca10',
  polarity: 'polarity',
  large: 'large',
  width: 'width',
  height: 'height',
  status: 'status',
  order: 'order',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.ProductoScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  codigo: 'codigo',
  precio: 'precio',
  codigoBarra: 'codigoBarra',
  estado: 'estado',
  orden: 'orden',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.PromocionDetalleScalarFieldEnum = makeEnum({
  id: 'id',
  promocionId: 'promocionId',
  productoId: 'productoId',
  porcentaje: 'porcentaje',
  monto: 'monto',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.PromocionScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  link: 'link',
  imagen: 'imagen',
  estado: 'estado',
  orden: 'orden',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin',
  empresaId: 'empresaId',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.ReviewScalarFieldEnum = makeEnum({
  id: 'id',
  body: 'body',
  author: 'author',
  status: 'status',
  order: 'order',
  created_at: 'created_at'
});

exports.Prisma.SequenceScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  seq: 'seq'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.SuccessScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  description: 'description',
  status: 'status',
  order: 'order',
  created_at: 'created_at'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  created_at: 'created_at'
});

exports.Prisma.UsuarioScalarFieldEnum = makeEnum({
  id: 'id',
  cedula: 'cedula',
  codigo: 'codigo',
  nombre: 'nombre',
  estado: 'estado',
  telefono: 'telefono',
  email: 'email',
  empresaId: 'empresaId',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.VacanciasScalarFieldEnum = makeEnum({
  id: 'id',
  titulo: 'titulo',
  imagen: 'imagen',
  preguntas: 'preguntas',
  requisitos: 'requisitos',
  vigencia: 'vigencia',
  area: 'area',
  estado: 'estado',
  orden: 'orden',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.VoucherScalarFieldEnum = makeEnum({
  id: 'id',
  codigo: 'codigo',
  fecha: 'fecha',
  canjeado: 'canjeado',
  canjeadoFecha: 'canjeadoFecha',
  promocionId: 'promocionId',
  productoId: 'productoId',
  cantidad: 'cantidad',
  usuarioId: 'usuarioId',
  created_at: 'created_at',
  updated_at: 'updated_at'
});


exports.Prisma.ModelName = makeEnum({
  Banner: 'Banner',
  Client: 'Client',
  Filter: 'Filter',
  Product: 'Product',
  Review: 'Review',
  Success: 'Success',
  User: 'User',
  LubVehLiviano: 'LubVehLiviano',
  LubMoto: 'LubMoto',
  LubAux: 'LubAux',
  LubVehPesado: 'LubVehPesado',
  Filtros: 'Filtros',
  Lubricantes: 'Lubricantes',
  Baterias: 'Baterias',
  Vacancias: 'Vacancias',
  Marcas: 'Marcas',
  Clientes: 'Clientes',
  Promocion: 'Promocion',
  PromocionDetalle: 'PromocionDetalle',
  Empresa: 'Empresa',
  Usuario: 'Usuario',
  Voucher: 'Voucher',
  Sequence: 'Sequence',
  Producto: 'Producto'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
