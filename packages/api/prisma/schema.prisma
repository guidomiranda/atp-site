generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Banner {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String[]
  image       String
  bg          String
  status      Boolean
  order       Int
  created_at  String
}

model Client {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String[]
  status      Boolean
  order       Int
  created_at  String
}

model Filter {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  image        String
  line         String?
  type         String?
  dia_ext      String?
  height       String?
  dia_int      String?
  thread       String?
  val_anti_ret String?
  val_ali      String?
  model        String?
  status       Boolean
  order        Int
  created_at   String
  updated_at   String
}

model Product {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  image      String
  category   String?
  capacity   String?
  cca10      String?
  polarity   String?
  large      String?
  width      String?
  height     String?
  status     Boolean
  order      Int
  created_at String
  updated_at String
}

model Review {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  body       String[]
  author     String
  status     Boolean
  order      Int
  created_at String
}

model Success {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String[]
  status      Boolean
  order       Int
  created_at  String
}

model User {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String
  password   String
  role       String
  created_at String
}

model LubVehLiviano {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  nombre         String
  descripcion    String[]
  image          String?
  presentacion   String
  status         Boolean
  order          Int
  indicado_para  String
  especificacion String
  created_at     String
  updated_at     String
}

model LubMoto {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  nombre        String
  descripcion   String[]
  presentacion  String
  indicado_para String
  status        Boolean
  order         Int
  image         String
  created_at    String
  updated_at    String
}

model LubAux {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  nombre        String
  descripcion   String[]
  image         String
  presentacion  String
  status        Boolean
  order         Int
  indicado_para String
  rec_honda     Boolean
  created_at    String
  updated_at    String
}

model LubVehPesado {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  nombre          String
  descripcion     String[]
  caracteristicas String[]
  image           String
  presentacion    String
  atiende_excede  String
  aprobado        String
  status          Boolean
  order           Int
  rec_exxon_mob   String
  created_at      String
  updated_at      String
}

model Filtros {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  nombre       String
  linea        String
  imagen       String
  altura       String?
  dia_ext      String?
  dia_int      String?
  estado       Boolean   @default(true)
  orden        Int       @default(1)
  rosca        String?
  tipo         String
  val_anti_ret String?
  val_ali      String?
  modelo       String?
  created_at   DateTime  @default(now())
  updated_at   DateTime?
}

model Lubricantes {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId()
  nombre          String
  descripcion     String[]
  imagen          String
  linea           String
  presentacion    String?
  estado          Boolean   @default(true)
  orden           Int       @default(1)
  indicado_para   String?
  especificacion  String?
  rec_honda       Boolean
  rec_exxon_mob   Boolean
  caracteristicas String[]
  atiende_excede  String?
  aprobado        String?
  created_at      DateTime  @default(now())
  updated_at      DateTime?
}

model Baterias {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  nombre     String
  imagen     String
  categoria  String?
  capacidad  String?
  cca10      String?
  polaridad  String?
  largo      String?
  ancho      String?
  altura     String?
  estado     Boolean   @default(true)
  orden      Int       @default(1)
  created_at DateTime  @default(now())
  updated_at DateTime?
}
